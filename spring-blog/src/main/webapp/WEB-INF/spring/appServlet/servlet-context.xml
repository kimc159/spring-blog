<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.1.xsd
		http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.project.blog" />
	<!-- 데이터베이스 연결 --> 
	<beans:bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"> 
		<beans:property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/> 
		<beans:property name="url" value="jdbc:oracle:thin:@127.0.0.1:1521:orcl" /> 
		<beans:property name="username" value=""/> 
		<beans:property name="password" value=""/> 
	</beans:bean>  
	
    <!-- email 인증 관련   -->
 <!--    <beans:bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <beans:property name="host" value="smtp.gmail.com" />
        <beans:property name="port" value="587" />
        <beans:property name="username" value=""/>
        <beans:property name="password" value="" />  
        <beans:property name="javaMailProperties">
            <beans:props>
                <beans:prop key="mail.transport.protocol">smtp</beans:prop>
                <beans:prop key="mail.smtp.auth">true</beans:prop> 
                <beans:prop key="mail.debug">true</beans:prop>
				<beans:prop key="mail.smtp.ssl.trust">smtp.gmail.com</beans:prop>
            </beans:props>
        </beans:property> 
    </beans:bean> -->
    
	<!-- SqlSession --> 
	<beans:bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"> 
		<beans:property name="dataSource" ref="dataSource" />
		
		<!-- MyBatis 설정 파일의 위치를 지정합니다. -->
		<beans:property name="configLocation" value="classpath:/mybatis-config.xml" />
		
		<!-- SQL 파일의 위치를 지정합니다. -->
		<beans:property name="mapperLocations" value="classpath:/mapper/*.xml" />
	</beans:bean>
	
	<!-- SqlSession -->
	<beans:bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate"> 
		<beans:constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory" /> 
	</beans:bean>
	
	<mybatis-spring:scan base-package="com.project.blog.board.mapper" />
	
	<interceptors>
		<interceptor>
			<mapping path="/board/**" />
			<mapping path="/main" />
			<mapping path="/findUser" />
			<beans:bean class="com.project.blog.member.MemberLoginInterceptor"></beans:bean>
		</interceptor>
	</interceptors>
	
</beans:beans>
