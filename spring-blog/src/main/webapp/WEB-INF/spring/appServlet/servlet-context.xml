<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.3.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.1.xsd
		http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @ㅋ programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- spring-donwload bean --> 
	<beans:bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
	    <beans:property name="order" value="0" />
	</beans:bean>
	<beans:bean id="downloadView" class="com.project.chat.util.DownloadView" /> 
	<!-- /spring-donwload bean -->
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
		<beans:property name="order" value="1" /> 
	</beans:bean>
	
	<context:component-scan base-package="boardGroup" />
	<context:component-scan base-package="com.project.chat" /> 
	<!-- 데이터베이스 연결 --> 
	<beans:bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"> 
		<beans:property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/> 
		<beans:property name="url" value="jdbc:oracle:thin:@127.0.0.1:1521:xe" />  
		<beans:property name="username" value="root"/> 
		<beans:property name="password" value="1234"/> 
	</beans:bean>  
	
 <!-- 회원가입 메일 인증 -->
	<beans:bean id="mailSender"	class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<beans:property name="host" value="smtp.gmail.com" />
		<beans:property name="port" value="587" /><!-- 465 or 25 -->
		<beans:property name="username" value="ljykimc159@gmail.com" /> 
		<beans:property name="password" value="" />
		<beans:property name="defaultEncoding" value="utf-8" /> 
		<beans:property name="javaMailProperties"> 
			<beans:props>
				<beans:prop key="mail.transport.protocol">smtp</beans:prop>
				<beans:prop key="mail.smtp.auth">true</beans:prop>	
				<beans:prop key="mail.smtp.starttls.enable">true</beans:prop>
				<beans:prop key="mail.debug">true</beans:prop> 
			</beans:props>
		</beans:property>
	</beans:bean>
    <!-- email 인증 관련   -->
 	<!-- <beans:bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <beans:property name="host" value="smtp.gmail.com" />
        <beans:property name="port" value="587" />
        <beans:property name="username" value=""/>
        <beans:property name="password" value="" />  
        <beans:property name="javaMailProperties">
            <beans:props>
                <beans:prop key="mail.transport.protocol">smtp</beans:prop>
                <beans:prop key="mail.smtp.auth">true</beans:prop> 
                <beans:prop key="mail.debug">true</beans:prop>
				<beans:prop key="mail.smtp.ssl.trust">smtp.gmail.com</beans:prop>
            </beans:props>
        </beans:property> 
    </beans:bean>
     -->
	<!-- SqlSession --> 
	<beans:bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"> 
		<beans:property name="dataSource" ref="dataSource" />
		
		<!-- MyBatis 설정 파일의 위치를 지정합니다. -->
		<beans:property name="configLocation" value="classpath:/mybatis-config.xml" />
		
		<!-- SQL 파일의 위치를 지정합니다. -->
		<beans:property name="mapperLocations" value="classpath:/mapper/*.xml" />
	</beans:bean>
	
	<!-- SqlSession -->
	<beans:bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<beans:constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory" />
	</beans:bean>
	<!-- MultipartResolver 설정 --> 
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"> 
		<beans:property name="maxUploadSize" value="10000000" /> 
		<beans:property name="maxInMemorySize" value="10000000" /> 
	</beans:bean>
	<beans:bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver"> 
		<beans:property name="exceptionMappings">
			<beans:props> 
				<beans:prop key="org.springframework.web.multipart.MaxUploadSizeExceededException"> /error/imgUploadErr </beans:prop> 
			</beans:props> 
		</beans:property> 
	</beans:bean>

	 <!-- AOP Pointcut/Advisor 설정 -->
	<!-- Controller 범위 설정 -->
	<mybatis-spring:scan base-package="com.project.chat.board.mapper" />
	
	<!-- <beans:bean id="htmlEscapingObjectMapper" class="com.project.chat.util.HtmlEscapingObjectMapperFactory" ></beans:bean>
	 <annotation-driven> 
		 <message-converters> 
			        <beans:bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" >
			        	<beans:property name="objectMapper" ref="htmlEscapingObjectMapper"></beans:property>
			        </beans:bean>
		</message-converters>
	</annotation-driven> -->
	
	<beans:bean id="echoHandler" class="com.project.chat.EchoHandler" />
	<websocket:handlers> 
	    <websocket:mapping handler="echoHandler" path="/echo-ws" />
	    <websocket:handshake-interceptors>
	        <beans:bean class="org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor" />
	    </websocket:handshake-interceptors>	
	    <websocket:sockjs />
	</websocket:handlers> 
 
	<!-- Transaction 설정 -->
	<beans:bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
 		<beans:property name="dataSource" ref="dataSource"/>
 	</beans:bean> 
 	
 	<!-- Transaction을 위한 AOP 설정 -->
 	<aop:config proxy-target-class="true">
		<aop:pointcut id="servicePublicMethod" expression="execution(public * com.project.chat..*(..))" /> 
		<aop:advisor advice-ref="txAdvice" pointcut-ref="servicePublicMethod" />
	</aop:config>

	<!-- 선언적 Transaction 설정  -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager"> 
		<tx:attributes>
			<tx:method name="deleteBoard2" rollback-for="Exception" />
			<tx:method name="roomDelete" rollback-for="Exception" /> 
		</tx:attributes> 
 	</tx:advice> 	
	
	<interceptors>
		<interceptor>
			<mapping path="/board/**" />
			<mapping path="/boardFile/**" />
			<mapping path="/main" />
			<mapping path="/findUser" />
			<mapping path="/chat/**" /> 
			<beans:bean class="com.project.chat.member.MemberLoginInterceptor"></beans:bean> 
		</interceptor> 
		<interceptor>  
			<mapping path="/login" />
			<beans:bean class="com.project.chat.member.MemberLoginInterceptor2"></beans:bean>
		</interceptor>
	</interceptors>
	
</beans:beans>
